#!/bin/sh

if [ ! -f tests/docker/tests_single_server/docker-compose.yml ]; then
    echo "Run this script from the root of the Serverpod repository"
    echo "I.e. util/publish_all"
    exit 1
fi

BASE=`pwd`
CLI_DIR=$BASE/tools/serverpod_cli
CLI=$CLI_DIR/bin/serverpod_cli.dart

echo "pub get cli"
cd $CLI_DIR
dart pub get
cd $BASE

PCOUNT_START_DEFAULT=0
PCOUNT_START="${1:-$PCOUNT_START_DEFAULT}"

echo "### START PUBLISHING"

echo "Base directory $BASE"
echo "Start at package $PCOUNT_START"

VERSION=`cat VERSION`
VERSION=$VERSION | xargs

if test -z "$VERSION"
then
  echo "Version number is not defined"
  exit
fi

if [[ $(git diff --stat) != '' ]]; then
  echo 'Git is dirty. Please commit all changes before publishing.'
  exit
else
  echo 'Git is clean'
fi

echo "Publish Serverpod version $VERSION"

echo "Updating pubspecs"
cd $BASE
dart $CLI generate-pubspecs --version $VERSION --mode production

echo "Publish packages"

PCOUNT=0
while read PACKAGE <&3; do
  if (($PCOUNT >= $PCOUNT_START));
  then
    echo "### PUBLISH PACKAGE: $PCOUNT"
    echo "$PACKAGE"
    cd $BASE/$PACKAGE
    dart pub publish

    if (($? != 0));
    then
      echo ""
      echo "### PUBLISH FAILED: $PCOUNT"
      echo "Fix issues, then resume by running"
      echo "util/publish_all $PCOUNT"
      echo ""
      echo ""
      break
    fi

    # Give pub.dev a chance to catch up between each package deployment
    echo ""
    sleep 1
  else
    echo "### SKIPPING PACKAGE: $PCOUNT"
    echo "$PACKAGE"
    echo ""
  fi
  PCOUNT=$((PCOUNT+1))
done 3<PUBLISHABLE_PACKAGES

echo "Restore pubspecs"
cd $BASE
git reset --hard HEAD

echo "dart pub get"
util/pub_get_all
